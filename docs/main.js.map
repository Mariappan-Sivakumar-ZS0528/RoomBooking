{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/rooms/room-detail/room-detail.component.css","webpack:///./src/app/admin/rooms/room-detail/room-detail.component.html","webpack:///./src/app/admin/rooms/room-detail/room-detail.component.ts","webpack:///./src/app/admin/rooms/room-edit/room-edit.component.css","webpack:///./src/app/admin/rooms/room-edit/room-edit.component.html","webpack:///./src/app/admin/rooms/room-edit/room-edit.component.ts","webpack:///./src/app/admin/rooms/rooms.component.css","webpack:///./src/app/admin/rooms/rooms.component.html","webpack:///./src/app/admin/rooms/rooms.component.ts","webpack:///./src/app/admin/users/user-detail/user-detail.component.css","webpack:///./src/app/admin/users/user-detail/user-detail.component.html","webpack:///./src/app/admin/users/user-detail/user-detail.component.ts","webpack:///./src/app/admin/users/user-edit/user-edit.component.css","webpack:///./src/app/admin/users/user-edit/user-edit.component.html","webpack:///./src/app/admin/users/user-edit/user-edit.component.ts","webpack:///./src/app/admin/users/users.component.css","webpack:///./src/app/admin/users/users.component.html","webpack:///./src/app/admin/users/users.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-route-guard.service.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/calendar/calendar.component.css","webpack:///./src/app/calendar/calendar.component.html","webpack:///./src/app/calendar/calendar.component.ts","webpack:///./src/app/calendar/edit-booking/edit-booking.component.css","webpack:///./src/app/calendar/edit-booking/edit-booking.component.html","webpack:///./src/app/calendar/edit-booking/edit-booking.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/form-reset.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/model/Booking.ts","webpack:///./src/app/model/Room.ts","webpack:///./src/app/model/User.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/prefetch-rooms.service.ts","webpack:///./src/app/prefetch-users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3Jvb21zL3Jvb20tZGV0YWlsL3Jvb20tZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"roomDetails\\\">\\n  <h2>Room details</h2>\\n  <a class=\\\"btn btn-small btn-warning\\\" (click)=\\\"editRoom()\\\" *ngIf=\\\"isAdminUser\\\">edit</a>\\n  <a class=\\\"btn btn-small btn-warning\\\" (click)=\\\"deleteRoom()\\\" *ngIf=\\\"isAdminUser\\\">delete</a>\\n  <div class=\\\"bg-warning p-5\\\" *ngIf=\\\"message\\\">{{message}}</div>\\n  <table>\\n    <tr>\\n      <td>id</td><td>{{room?.id}}</td>\\n    </tr>\\n    <tr>\\n      <td>name</td><td>{{room?.name}}</td>\\n    </tr>\\n    <tr>\\n      <td>location</td><td>{{room?.location}}</td>\\n    </tr>\\n  </table>\\n  <h4>This room can accomodate:</h4>\\n  <table *ngIf=\\\"room\\\">\\n    <tr *ngFor=\\\"let layoutCapacity of room.capacities\\\"> <!-- repeat the tr for each capacity -->\\n      <td>{{layoutCapacity.layout}}</td><td>{{layoutCapacity.capacity}}</td>\\n    </tr>\\n  </table>\\n</div>\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\nimport { DataService } from 'src/app/data.service';\nimport { Room } from 'src/app/model/Room';\n\n@Component({\n  selector: 'app-room-detail',\n  templateUrl: './room-detail.component.html',\n  styleUrls: ['./room-detail.component.css']\n})\nexport class RoomDetailComponent implements OnInit {\n\n  @Input()\n  room: Room;\n\n  @Output()\n  dataChangeEvent=new EventEmitter();\n\n  message=''\n\n  isAdminUser=false;\n\n  constructor(private router: Router, \n    private dataService: DataService,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    if (this.authService.role==='ADMIN') this.isAdminUser=true;\n    this.authService.roleSetEvent.subscribe(\n      next=>{\n        if (next==='ADMIN'){\n          this.isAdminUser=true;\n        } else{\n          this.isAdminUser=false\n        }\n      }\n    )\n  }\n  editRoom(){\n    this.router.navigate(['admin','rooms'],{queryParams:{action: 'edit', id:this.room.id}})\n  }\n\n  deleteRoom(){\n    const result=confirm('Are you sure you wish to delete this room?')\n    if(result){\n    this.message='deleting...';\n    this.dataService.deleteRoom(this.room.id).subscribe(\n      next=> {\n        this.dataChangeEvent.emit();\n        this.router.navigate(['admin','rooms']);\n      },\n      error=> this.message='Sorry this room is cannot be deleted at this time'\n    )\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3Jvb21zL3Jvb20tZWRpdC9yb29tLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1> {{room.id == null ? 'Add' : 'Edit'}} Room</h1>\\n\\n<div class=\\\"bg-warning p-5\\\" *ngIf=\\\"message\\\">{{message}}</div>\\n<form [formGroup]=\\\"roomForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"room name\\\" formControlName=\\\"roomName\\\" required>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"roomForm.controls['roomName'].invalid && roomForm.controls['roomName'].dirty\\\"> Room name cannot be blank</div>\\n\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"location\\\">Location</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"location\\\" placeholder=\\\"location\\\" formControlName=\\\"location\\\" required>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"roomForm.controls['location'].invalid && roomForm.controls['location'].dirty\\\"> Location Cannot be Blank</div>\\n  </div>\\n\\n  <h2>This room can accomodate:</h2>\\n\\n  <!-- list the layout types here -->\\n  <div class=\\\"form-group\\\" *ngFor=\\\"let layout of layouts\\\">\\n    <label for=\\\"layout{{layout}}\\\">{{layoutEnum[layout]}}</label>\\n    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"layout{{layout}}\\\" formControlName=\\\"layout{{layout}}\\\">\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"roomForm.invalid\\\">Save</button>\\n</form>\\n\"","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth.service';\nimport { DataService } from 'src/app/data.service';\nimport { FormResetService } from 'src/app/form-reset.service';\nimport { Layout, LayoutCapacity, Room } from 'src/app/model/Room';\n\n@Component({\n  selector: 'app-room-edit',\n  templateUrl: './room-edit.component.html',\n  styleUrls: ['./room-edit.component.css']\n})\nexport class RoomEditComponent implements OnInit, OnDestroy {\n\n  @Input()\n  room: Room;\n\n  @Output()\n  dataChangeEvent=new EventEmitter();\n\n  message=''\n\n  layouts=Object.keys(Layout);\n\n  layoutEnum=Layout;\n\n  roomForm: FormGroup;\n\n  resetEventSubscription: Subscription;\n\n  constructor(private formBuilder: FormBuilder, \n    private dataService: DataService, \n    private router: Router,\n    private formResetService: FormResetService,\n    private authService: AuthService) { }\n  ngOnDestroy(): void {\n    this.resetEventSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n    this.resetEventSubscription= this.formResetService.resetRoomFormEvent.subscribe(\n      (room: Room)=>{\n        this.room=room;\n        this.initializeForm();\n      }\n    )\n  }\n\n  initializeForm(){\n    this.roomForm=this.formBuilder.group(\n      {roomName: [this.room.name, Validators.required],\n      location: [this.room.location,[Validators.required,Validators.minLength(2)]]\n\n      }\n    )\n    this.roomForm.patchValue({\n      roomName:this.room.name,\n      location: this.room.location\n    });\n    for (const layout of this.layouts) {\n      const layoutCapacity=this.room.capacities.find(lc=>lc.layout===Layout[layout]);\n      const initialCapacity= layoutCapacity==null ? 0: layoutCapacity.capacity;\n      this.roomForm.addControl(`layout${layout}`, this.formBuilder.control(initialCapacity));\n    }\n  }\n\n  onSubmit(){\n    this.room.name=this.roomForm.controls['roomName'].value;\n    this.room.location=this.roomForm.controls['location'].value;\n    this.room.capacities=new Array<LayoutCapacity>();\n    for (const layout of this.layouts) {\n      const layoutCapacity = new LayoutCapacity();\n      layoutCapacity.layout=Layout[layout];\n      layoutCapacity.capacity=this.roomForm.controls[`layout${layout}`].value;\n      this.room.capacities.push(layoutCapacity);\n    }\n    if (this.room.id==null) {\n      this.dataService.addRoom(this.room).subscribe(\n         next=> {\n          this.dataChangeEvent.emit();\n          this.router.navigate(['admin','rooms'],{queryParams: {action: 'view', id: next.id}})\n         },\n         error=>{\n           this.message='Something went wrong, Please try again.';\n         }\n      )\n    } else{\n      this.dataService.updateRoom(this.room).subscribe(\n        next=> {\n          this.dataChangeEvent.emit();\n          this.router.navigate(['admin','rooms'],{queryParams: {action: 'view', id: next.id}})\n        },\n        error=>{\n          this.message='Something went wrong, Please try again.';\n        }\n      )\n    }\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3Jvb21zL3Jvb21zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>Rooms Admin</h1>\\n\\n<a class=\\\"btn btn-warning mb-3\\\" (click)=\\\"addRoom()\\\" *ngIf=\\\"isAdminUser\\\">add</a>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">\\n      <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Name</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let room of rooms\\\"> <!-- repeat the tr for each room -->\\n            <td>{{room.id}}</td>\\n            <td>{{room.name}}</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setRoom(room.id)\\\">view</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <div *ngIf=\\\"loadingData\\\">{{message}}</div>\\n    </div>\\n    <div class=\\\"col-6\\\">\\n      <app-room-detail *ngIf=\\\"action==='view'\\\" [room]=\\\"selectedRoom\\\" (dataChangeEvent)=\\\"loadData()\\\"></app-room-detail>\\n      <app-room-edit *ngIf=\\\"action==='edit'\\\" [room]=\\\"selectedRoom\\\" (dataChangeEvent)=\\\"loadData()\\\"></app-room-edit>\\n    </div>\\n  </div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\nimport { DataService } from 'src/app/data.service';\nimport { FormResetService } from 'src/app/form-reset.service';\nimport { Room } from 'src/app/model/Room';\n\n@Component({\n  selector: 'app-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.css']\n})\nexport class RoomsComponent implements OnInit {\n  rooms: Array<Room>;\n  selectedRoom: Room;\n  action: string;\n  loadingData = true;\n  message = 'Please wait.... getting data of room';\n  reloadAttempts = 0;\n  isAdminUser=false;\n\n  constructor(private dataService: DataService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private formResetService: FormResetService,\n    private authService: AuthService) { }\n\n  loadData() {\n    this.dataService.getRooms().subscribe(\n      (next) => {\n        this.rooms = next\n        this.loadingData = false;\n        this.processUrlParam();\n      },\n      error => {\n        if (error.status === 402) {\n          this.message = 'Sorry You need to make payment before using the application';\n        } else {\n          if (this.reloadAttempts < 10) {\n            this.reloadAttempts++;\n            this.message = 'sorry something went wrong. trying again.... ';\n            this.loadData();\n          } else {\n            this.message = 'sorry something went wrong please contact support ';\n          }\n        }\n      }\n\n    );\n  }\n\n  processUrlParam() {\n    this.route.queryParams.subscribe(\n      (param) => {\n        this.action = null;\n        const id = param['id'];\n        if (id) {\n          this.selectedRoom = this.rooms.find((room) => room.id === +id);\n          this.action = param['action'];\n        }\n        if (param['action'] === 'add') {\n          this.selectedRoom = new Room();\n          this.action = 'edit';\n          this.formResetService.resetRoomFormEvent.emit(this.selectedRoom);\n        }\n      }\n    );\n  }\n  ngOnInit() {\n    this.loadData();\n    if(this.authService.role==='ADMIN'){\n      this.isAdminUser=true;\n    }\n    this.authService.roleSetEvent.subscribe(\n      next=>{\n        if (next==='ADMIN'){\n          this.isAdminUser=true;\n        } else{\n          this.isAdminUser=false\n        }\n      }\n    )\n  }\n\n  setRoom(id: number) {\n    this.router.navigate(['admin', 'rooms'], { queryParams: { id: id, action: 'view' } });\n  }\n\n  addRoom() {\n    this.router.navigate(['admin', 'rooms'], { queryParams: { action: 'add' } });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VzZXJzL3VzZXItZGV0YWlsL3VzZXItZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"userDetails\\\">\\n  <h2>User details</h2>\\n  <a class=\\\"btn btn-small btn-warning\\\" (click)=\\\"editUser()\\\" *ngIf=\\\"isAdminUser\\\">edit</a>\\n  <a class=\\\"btn btn-small btn-warning\\\" (click)=\\\"deleteUser()\\\" *ngIf=\\\"isAdminUser\\\">delete</a>\\n  <div *ngIf=\\\"message\\\" class=\\\"bg-warning p-5\\\">{{message}}</div>\\n  <table>\\n    <tr>\\n      <td>id</td><td>{{user?.id}}</td>\\n    </tr>\\n    <tr>\\n      <td>name</td><td>{{user?.name}}</td>\\n    </tr>\\n    <tr>\\n      <td>Password</td><td><a class=\\\"btn btn-small btn-warning\\\" (click)=\\\"resetPassword()\\\" *ngIf=\\\"isAdminUser\\\">reset</a></td>\\n    </tr>\\n  </table>\\n</div>\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\nimport { DataService } from 'src/app/data.service';\nimport { User } from 'src/app/model/User';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n  @Input()\n  user: User;\n\n  @Output()\n  dataChangeEvent=new EventEmitter();\n\n  message='';\n\n  isAdminUser=false;\n  \n  constructor(private dataService: DataService, \n    private router:Router,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.setUpRole();\n    if (this.authService.role==='ADMIN') {\n      this.isAdminUser=true;\n    }this.authService.roleSetEvent.subscribe(\n      next=>{\n        if (next==='ADMIN'){\n          this.isAdminUser=true;\n        } else{\n          this.isAdminUser=false\n        }\n      }\n    )\n\n  }\n\n  editUser(){\n    console.log(this.user.id);\n    \n    this.router.navigate(['admin','users'],{queryParams: {action:'edit', id: +this.user.id}});    \n  }\n  \n  deleteUser(){\n    const result=confirm('Are you sure you wish to delete this user?');\n    if(result){  \n      this.message='Deleting User...';\n      this.dataService.deleteUser(this.user.id).subscribe(\n        next=>{\n          this.dataChangeEvent.emit();\n          this.router.navigate(['admin','users']);\n        },\n        error=>this.message='Sorry this user cannot be deleted at this time!'\n      )\n    }\n  }\n\n  resetPassword(){\n    this.message='please wait...';\n    this.dataService.resetUserPassword(this.user.id).subscribe(\n      next=>this.message='Password is reset',\n      error=> this.message='Sorry, Something went wrong'\n    );\n  }\n\n}\n","module.exports = \"input.ng-invalid.ng-touched{\\r\\n    border: 1.5px solid red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdXNlcnMvdXNlci1lZGl0L3VzZXItZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0FBQzNCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vdXNlcnMvdXNlci1lZGl0L3VzZXItZWRpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVke1xyXG4gICAgYm9yZGVyOiAxLjVweCBzb2xpZCByZWQ7XHJcbn0iXX0= */\"","module.exports = \"<h1>{{user.id==null? 'Add': 'Edit'}} User</h1>\\n\\n<div class=\\\"bg-warning p-5\\\" *ngIf=\\\"message\\\">{{message}}</div>\\n\\n<form #userForm=\\\"ngForm\\\">\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"user name\\\" [(ngModel)]=\\\"formUser.name\\\" name=\\\"name\\\" \\n    required #nameField=\\\"ngModel\\\" (change)=\\\"checkNameIsValid()\\\">\\n    <div *ngIf=\\\"nameField.touched&& nameField.invalid\\\" class=\\\"alert alert-danger\\\">Name is required</div>\\n    <div *ngIf=\\\"nameField.touched&& !nameIsValid\\\" class=\\\"alert alert-danger\\\">Name cannot be blank</div>\\n\\n  </div>\\n\\n  <div class=\\\"form-group\\\" *ngIf=\\\"user.id==null\\\"> <!-- only show this field on adding a user -->\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"password\\\" name=\\\"password\\\" \\n    [(ngModel)]=\\\"password\\\" (change)=\\\"checkPasswordIsValid()\\\" required #pass1=\\\"ngModel\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"pass1.touched && pass1.invalid\\\">Password Required</div>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"pass1.touched && !passwordAreValid\\\">Password Can not be blank</div>\\n    \\n    <label for=\\\"password2\\\">Repeat Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password2\\\" placeholder=\\\"password\\\" name=\\\"password2\\\" \\n    [(ngModel)]=\\\"password2\\\" (change)=\\\"checkPasswordIsValid()\\\" required #pass2=\\\"ngModel\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"pass2.touched && !passwordMatch\\\">Password must match</div>\\n  </div>\\n  \\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"userForm.invalid || !nameIsValid || !passwordAreValid || !passwordMatch\\\">Save</button>\\n</form>\\n\"","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { DataService } from 'src/app/data.service';\nimport { FormResetService } from 'src/app/form-reset.service';\nimport { User } from 'src/app/model/User';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit ,OnDestroy{\n  \n  @Output()\n  dataChangeEvent=new EventEmitter();\n  \n  @Input()\n  user: User;\n  formUser: User;\n\n  message: string;\n\n  password: string;\n\n  password2: string;\n\n  nameIsValid = false;\n\n  passwordAreValid = false;\n\n  passwordMatch = false;\n\n  userResetSubscription: Subscription;\n\n\n  constructor(private dataService: DataService, private router: Router, private formResetService: FormResetService) { }\n  ngOnDestroy(): void {\n    this.userResetSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n    this.userResetSubscription=this.formResetService.resetUserFormEvent.subscribe(\n      user=> {\n        this.user=user;\n        this.initializeForm();\n      }\n    );\n  }\n\n  initializeForm(){\n    this.formUser = Object.assign({}, this.user);\n    this.checkNameIsValid();\n    this.checkPasswordIsValid();\n  }\n  onSubmit() {\n    this.message='Saving...';\n    if (this.formUser.id == null) {\n      this.dataService.addUser(this.formUser, this.password).subscribe(\n        user =>{\n        this.dataChangeEvent.emit();\n          this.router.navigate(['admin', 'users'], { queryParams: { action: 'view', id: user.id } })\n        },\n        error=>{\n          this.message='Something went wrong and the data wasn\\'t saved. Please try again.'\n        }\n      )\n    }\n    else {\n      this.dataService.updateUser(this.formUser).subscribe(\n        user => {\n          this.dataChangeEvent.emit();\n          this.router.navigate(['admin', 'users'], { queryParams: { action: 'view', id: user.id } })\n        },\n        error=>{\n          this.message='Something went wrong and the data wasn\\'t saved. Please try again.'\n        }\n      )\n    }\n  }\n\n  checkNameIsValid() {\n    if (this.formUser.name) {\n      this.nameIsValid = this.formUser.name.trim().length > 0;\n    } else {\n      this.nameIsValid = false;\n    }\n  }\n\n  checkPasswordIsValid() {\n    if (this.formUser.id == null) {\n      this.passwordMatch = this.password === this.password2;\n      if (this.password) {\n        this.passwordAreValid = this.password.trim().length > 0;\n      }\n      else {\n        this.passwordAreValid = false;\n      }\n    } else {\n      this.passwordMatch = true;\n      this.passwordAreValid = true;\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>Users Admin</h1>\\n<a class=\\\"btn btn-warning mb-3\\\" (click)=\\\"addUser()\\\" *ngIf=\\\"isAdminUser\\\">add</a>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-6\\\">\\n    <table class=\\\"table\\\">\\n      <thead>\\n      <tr>\\n        <th>ID</th>\\n        <th>Name</th>\\n        <th></th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let user of users\\\"> <!-- repeat this tr for each user -->\\n        <td>{{user.id}}</td>\\n        <td>{{user.name}}</td>\\n        <td><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"selectUser(user.id)\\\">view</button></td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div *ngIf=\\\"loadingData\\\">{{message}}</div>\\n  <div class=\\\"col-6\\\">\\n    <app-user-detail *ngIf=\\\"action==='view'\\\" [user]=\\\"selectedUser\\\" (dataChangeEvent)=\\\"loadData()\\\"></app-user-detail>\\n    <app-user-edit *ngIf=\\\"action==='edit' || action==='add'\\\" [user]=\\\"selectedUser\\\" (dataChangeEvent)=\\\"loadData()\\\"></app-user-edit>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\nimport { DataService } from 'src/app/data.service';\nimport { FormResetService } from 'src/app/form-reset.service';\nimport { User } from 'src/app/model/User';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  users: Array<User>;\n  selectedUser: User;\n  action: string;\n  message='Loading user data.... Please wait';\n  loadingData=true;\n  isAdminUser=false\n\n  constructor(private dataService: DataService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private formResetService: FormResetService,\n              private authService: AuthService) { }\n\n  loadData(){\n    this.dataService.getUsers().subscribe(\n      next => {\n        this.users = next;\n        this.loadingData=false;\n        this.processingParam();\n      },\n      error=>{\n        this.message='An error occur please contact support';\n      }\n    );\n  }\n  processingParam(){\n    this.route.queryParams.subscribe(\n      (params) => {\n        const id = params['id'];\n        this.action = params['action'];\n        if (id) {\n          this.selectedUser = this.users.find( user => user.id === +id);\n        }\n      }\n    );\n  }\n  ngOnInit(): void {\n    this.loadData();\n    if (this.authService.role==='ADMIN') {\n      this.isAdminUser=true;\n    }\n    this.authService.roleSetEvent.subscribe(\n      next=>{\n        if (next==='ADMIN'){\n          this.isAdminUser=true;\n        } else{\n          this.isAdminUser=false\n        }\n      }\n    )\n  }\n\n  selectUser(id: number) {\n    this.router.navigate(['admin','users'],{queryParams : {id, action : 'view'}});\n  }\n\n  addUser(){\n    this.selectedUser=new User();\n    this.router.navigate(['admin','users'],{queryParams : {action : 'add'}});\n    this.formResetService.resetUserFormEvent.emit(this.selectedUser);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-menu></app-menu>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'RoomBookingClient';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { RoomsComponent } from './admin/rooms/rooms.component';\nimport { UsersComponent } from './admin/users/users.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { RoomDetailComponent } from './admin/rooms/room-detail/room-detail.component';\nimport { UserDetailComponent } from './admin/users/user-detail/user-detail.component';\nimport { UserEditComponent } from './admin/users/user-edit/user-edit.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RoomEditComponent } from './admin/rooms/room-edit/room-edit.component';\nimport { EditBookingComponent } from './calendar/edit-booking/edit-booking.component';\nimport { PrefetchRoomsService } from './prefetch-rooms.service';\nimport { PrefetchUsersService } from './prefetch-users.service';\nimport { LoginComponent } from './login/login.component';\nimport { AuthRouteGuardService } from './auth-route-guard.service';\n\nconst routes: Routes=[\n  {path: 'admin/users', component: UsersComponent, canActivate:[AuthRouteGuardService]},\n  {path: 'admin/rooms', component: RoomsComponent, canActivate:[AuthRouteGuardService]},\n  {path: '', component:CalendarComponent},\n  {path: '404', component:PageNotFoundComponent},\n  {path: 'editBooking', component:EditBookingComponent, resolve:{rooms: PrefetchRoomsService, users: PrefetchUsersService}, canActivate:[AuthRouteGuardService]},\n  {path: 'addBooking', component:EditBookingComponent, resolve:{rooms: PrefetchRoomsService, users: PrefetchUsersService}, canActivate:[AuthRouteGuardService]},\n  {path: 'login', component:LoginComponent},\n  {path: '**', redirectTo: '/404'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    CalendarComponent,\n    RoomsComponent,\n    UsersComponent,\n    PageNotFoundComponent,\n    RoomDetailComponent,\n    UserDetailComponent,\n    UserEditComponent,\n    RoomEditComponent,\n    EditBookingComponent,\n    LoginComponent\n ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthRouteGuardService implements CanActivate{\n\n  constructor(private authService: AuthService,\n    private router: Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    if(!this.authService.isAuthenticated){\n      this.router.navigate(['login'],{queryParams:{requested: state.url}})\n    }\n    return this.authService.isAuthenticated\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { DataService } from './data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  isAuthenticated=false;\n\n  authenticationResultEvent= new EventEmitter<boolean>();\n\n  role: string;\n  roleSetEvent=new EventEmitter<string>();\n\n\n  authenticate(name: string, password: string){\n    this.dataservice.validateUser(name,password).subscribe(\n      next=> {\n        this.setUpRole();\n        this.isAuthenticated=true;\n        this.authenticationResultEvent.emit(true);\n      }, error=>{\n        this.isAuthenticated=false;\n        this.authenticationResultEvent.emit(false);\n      }\n    );\n  }\n\n  setUpRole(){\n    this.dataservice.getRole().subscribe(\n      next=> {\n        this.role=next.role;\n        this.roleSetEvent.emit(next.role)\n      }\n    )\n  }\n\n  checkIfAlreadyAuthenticated(){\n    this.dataservice.getRole().subscribe(\n      next=>{\n        console.log(next.role);\n        \n        if (next.role!=='') {\n          \n        this.role=next.role;\n        this.roleSetEvent.emit(next.role);\n          this.isAuthenticated=true;\n          console.log(this.isAuthenticated);\n          \n          this.authenticationResultEvent.emit(true);\n        }\n      }\n    )\n  }\n\n  logout(){\n    this.dataservice.logout().subscribe();\n    this.isAuthenticated=false;\n    this.authenticationResultEvent.emit(false);\n    this.roleSetEvent.emit('')\n  }\n\n  constructor(private dataservice: DataService) {\n    this.checkIfAlreadyAuthenticated()\n   }\n}\n","module.exports = \".badge-secondary{\\r\\n    background-color: darkslategrey;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FsZW5kYXIvY2FsZW5kYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLCtCQUErQjtBQUNuQyIsImZpbGUiOiJzcmMvYXBwL2NhbGVuZGFyL2NhbGVuZGFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFkZ2Utc2Vjb25kYXJ5e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya3NsYXRlZ3JleTtcclxufSJdfQ== */\"","module.exports = \"<h1>Room Booking System</h1>\\r\\n\\r\\n<h2>The following meetings are taking place on: <input type=\\\"date\\\" [(ngModel)]=\\\"selectedDate\\\" name=\\\"selectedDate\\\" (change)=\\\"dateChange()\\\" /></h2>\\r\\n\\r\\n<a class=\\\"btn btn-primary mt-3 mb-5\\\" (click)=\\\"addBooking()\\\" *ngIf=\\\"isAdminUser\\\">New Booking</a>\\r\\n<div *ngIf=\\\"message\\\">{{message}}</div>\\r\\n<div *ngIf=\\\"dataLoaded\\\">\\r\\n<!-- only show this h3 if there are no bookings! -->\\r\\n  <h3 class=\\\"mt-5\\\" *ngIf=\\\"bookings.length===0\\\">There are no meetings currently scheduled for this date.</h3>\\r\\n\\r\\n  <div class=\\\"row row-striped\\\" *ngFor=\\\"let booking of bookings\\\"> <!-- repeat this div for each booking -->\\r\\n    <div class=\\\"col-2 text-right\\\">\\r\\n      <h1 class=\\\"display-4\\\"><span class=\\\"badge badge-secondary\\\">{{booking.getDateAsDate() | date:'dd'}}</span></h1>\\r\\n      <h2>{{booking.getDateAsDate() | date:'MMM'}}</h2>\\r\\n    </div>\\r\\n    <div class=\\\"col-10\\\">\\r\\n      <h3 class=\\\"text-uppercase\\\"><strong>{{booking.title}}</strong></h3>\\r\\n      <ul class=\\\"list-inline\\\">\\r\\n        <li class=\\\"list-inline-item\\\"><i class=\\\"fa fa-calendar-o\\\" aria-hidden=\\\"true\\\"></i>{{booking.getDateAsDate() | date:'EEE'}}</li>\\r\\n        <li class=\\\"list-inline-item\\\"><i class=\\\"fa fa-clock-o\\\" aria-hidden=\\\"true\\\"></i>{{booking.startTime}} - {{booking.endTime}}</li>\\r\\n        <li class=\\\"list-inline-item\\\"><i class=\\\"fa fa-location-arrow\\\" aria-hidden=\\\"true\\\"></i>{{booking.room.name}}</li>\\r\\n      </ul>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <p class=\\\"mb-0\\\">Booked by : {{booking.user.name}}</p>\\r\\n          <p class=\\\"mb-0\\\">Room layout: {{booking.layout}}</p>\\r\\n          <p>Participants: {{booking.participants}}</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <a class=\\\"btn btn-warning\\\" (click)=\\\"editBooking(booking.id)\\\" *ngIf=\\\"isAdminUser\\\">Amend</a>\\r\\n          <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteBooking(booking.id)\\\" *ngIf=\\\"isAdminUser\\\">Cancel</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<p class=\\\"mt-5\\\">The design of this page is taken from <a href=\\\"https://bootsnipp.com/snippets/VgzeR\\\">https://bootsnipp.com/snippets/VgzeR</a></p>\\r\\n\"","import { formatDate } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { DataService } from '../data.service';\nimport { Booking } from '../model/Booking';\nimport { User } from '../model/User';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n\n  bookings: Array<Booking>;\n\n  selectedDate: string\n\n  dataLoaded = false;\n  message = '';\n  isAdminUser=false;\n\n  constructor(private dataService: DataService, \n    private router: Router, \n    private route: ActivatedRoute,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    this.loadData();\n    if (this.authService.role==='ADMIN') {\n      this.isAdminUser=true;\n    }\n    this.authService.roleSetEvent.subscribe(\n      next=>{\n        if (next==='ADMIN'){\n          this.isAdminUser=true;\n        } else{\n          this.isAdminUser=false\n        }\n      }\n    )\n  }\n\n  loadData() {\n    this.message = 'Loading data....';\n    this.route.queryParams.subscribe(\n      params => {\n        this.selectedDate = params['date'];\n        if (!this.selectedDate) {\n          this.selectedDate = formatDate(new Date(), 'yyyy-MM-dd', 'en-IN');\n        }\n        this.dataService.getBookings(this.selectedDate).subscribe(\n          next => {\n            this.bookings = next;\n            this.dataLoaded = true;\n            this.message = '';\n          },\n          error => this.message = 'Sorry something wrong try again'\n        )\n      }\n    )\n  }\n  editBooking(id: number) {\n    this.router.navigate(['editBooking'], { queryParams: { id: id } })\n  }\n\n  addBooking() {\n    this.router.navigate(['addBooking']);\n  }\n\n  deleteBooking(id: number) {\n    const result = confirm('Are you sure you wish to delete this Booking?')\n    if (result) {\n      this.message = 'Deleting please wait...'\n      this.dataService.deleteBooking(id).subscribe(\n        next => {\n          this.message = '';\n          this.loadData();\n        },\n        error => {\n          this.message = 'Sorry there is problem in deleting the item'\n        }\n      );\n    }\n  }\n\n  dateChange() {\n    this.router.navigate([''], { queryParams: { date: this.selectedDate } })\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbGVuZGFyL2VkaXQtYm9va2luZy9lZGl0LWJvb2tpbmcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>{{booking?.id == null ? 'Add' : 'Edit'}} Booking</h1>\\n\\n<div class=\\\"bg-warning p-5\\\" *ngIf=\\\"message\\\">{{message}}</div>\\n<form *ngIf=\\\"dataLoaded\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group col-4\\\">\\n      <label for=\\\"date\\\">Date</label>\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"date\\\" [(ngModel)]=\\\"booking.date\\\" name=\\\"date\\\">\\n    </div>\\n\\n    <div class=\\\"form-group col-4\\\">\\n      <label for=\\\"startTime\\\">Start time</label>\\n      <input type=\\\"time\\\" class=\\\"form-control\\\" id=\\\"startTime\\\" [(ngModel)]=\\\"booking.startTime\\\" name=\\\"startTime\\\">\\n    </div>\\n\\n    <div class=\\\"form-group col-4\\\">\\n      <label for=\\\"endTime\\\">End time</label>\\n      <input type=\\\"time\\\" class=\\\"form-control\\\" id=\\\"endTime\\\" [(ngModel)]=\\\"booking.endTime\\\" name=\\\"endTime\\\">\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"form-group col-5\\\">\\n      <label for=\\\"room\\\">Room</label>\\n      <select class=\\\"form-control\\\" id=\\\"room\\\" [(ngModel)]=\\\"booking.room\\\" name=\\\"room\\\">\\n        <!-- repeat the option for each room -->\\n        <option *ngFor=\\\"let room of rooms\\\" [ngValue]=\\\"room\\\">{{room.name}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group col-5\\\">\\n      <label for=\\\"layout\\\">Layout</label>\\n      <select class=\\\"form-control\\\" id=\\\"layout\\\" [(ngModel)]=\\\"booking.layout\\\" name=\\\"layout\\\">\\n        <!-- repeat the option for each layout -->\\n        <option *ngFor=\\\"let layout of layouts\\\" [ngValue]=\\\"layoutEnum[layout]\\\">{{layoutEnum[layout]}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group col-2\\\">\\n      <label for=\\\"participants\\\">Participants</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"participants\\\" [(ngModel)]=\\\"booking.participants\\\" name=\\\"participants\\\">\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group col-6\\\">\\n      <label for=\\\"layout\\\">User</label>\\n      <select class=\\\"form-control\\\" id=\\\"user\\\" [(ngModel)]=\\\"booking.user\\\" name=\\\"user\\\">\\n        <!-- repeat the option for each user -->\\n        <option *ngFor=\\\"let user of users\\\" [ngValue]=\\\"user\\\">{{user.name}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group col-6\\\">\\n      <label for=\\\"title\\\">Meeting title</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" [(ngModel)]=\\\"booking.title\\\" name=\\\"title\\\">\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Save</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { DataService } from 'src/app/data.service';\nimport { Booking } from 'src/app/model/Booking';\nimport { Layout, Room } from 'src/app/model/Room';\nimport { User } from 'src/app/model/User';\n\n@Component({\n  selector: 'app-edit-booking',\n  templateUrl: './edit-booking.component.html',\n  styleUrls: ['./edit-booking.component.css']\n})\nexport class EditBookingComponent implements OnInit {\n\n  booking: Booking;\n\n  rooms: Array<Room>;\n\n  layouts = Object.keys(Layout);\n  layoutEnum = Layout;\n\n  users: Array<User>;\n\n  dataLoaded=false;\n\n  message='please wait...';\n\n  constructor(private dataService: DataService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.rooms=this.route.snapshot.data['rooms'];\n    this.users=this.route.snapshot.data['users'];\n    const id = this.route.snapshot.queryParams['id'];\n    if (id) {\n      this.dataService.getBooking(+id)\n      .pipe(\n        map(\n          booking=>{\n            booking.room=this.rooms.find(room=> room.id===booking.room.id);\n            booking.user=this.users.find(user=> user.id===booking.user.id);\n            return booking;\n          }\n        )\n      )\n      .subscribe(\n        next => {\n          this.booking = next\n          this.dataLoaded=true;\n          this.message=''\n        }\n      )\n    } else {\n      this.booking = new Booking();\n      this.dataLoaded=true;\n      this.message=''\n    }\n  }\n  save() {\n    if (this.booking.id != null) {\n      this.dataService.saveBooking(this.booking).subscribe(\n        next => this.router.navigate([''])\n      )\n    } else {\n      this.dataService.addBooking(this.booking).subscribe(\n        next => this.router.navigate(['']) \n    )\n    }\n\n  }\n}\n","import { formatDate } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Booking } from './model/Booking';\r\nimport { Layout, LayoutCapacity, Room } from './model/Room';\r\nimport { User } from './model/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  private rooms: Array<Room>;\r\n  private users: Array<User>;\r\n  private bookings: Array<Booking>;\r\n\r\n  getRooms(): Observable<Array<Room>>{\r\n    return of(this.rooms);\r\n  }\r\n\r\n  getUsers(): Observable<Array<User>>{\r\n    return of(this.users);\r\n  }\r\n\r\n  updateUser(user: User): Observable<User>{\r\n    const originalUser=this.users.find(u=>u.id===user.id);\r\n    originalUser.name=user.name;\r\n    return of(originalUser);\r\n  }\r\n\r\n  addUser(newUser: User, password: string): Observable<User>{\r\n    let id=0;\r\n    for (const user of this.users) {\r\n      if (user.id>id) {\r\n        id=user.id;\r\n      }\r\n    }\r\n    newUser.id=id+1;\r\n    this.users.push(newUser);\r\n    return of(newUser);\r\n  }\r\n\r\n  deleteUser(userId: number): Observable<any>{\r\n    const user: User= this.users.find(u=> u.id===userId);\r\n    this.users.splice(this.users.indexOf(user),1);\r\n    return of(null);\r\n  }\r\n\r\n  resetUserPassword(userId: number): Observable<any>{\r\n    return of(null);\r\n  }\r\n\r\n  updateRoom(room: Room): Observable<Room>{\r\n    const originalRoom=this.rooms.find(r=>r.id===room.id);\r\n    originalRoom.name= room.name;\r\n    originalRoom.location=room.location;\r\n    originalRoom.capacities=room.capacities;\r\n    return of(originalRoom);\r\n  }\r\n\r\n\r\n  addRoom(newroom: Room): Observable<Room>{\r\n    let id=0;\r\n    for (const room of this.rooms) {\r\n      if (room.id>id) {\r\n        id=room.id;\r\n      }\r\n    }\r\n    newroom.id=id+1;\r\n    this.rooms.push(newroom);\r\n    return of(newroom)\r\n  }\r\n\r\n  deleteRoom(id: number): Observable<any> {\r\n    const room= this.rooms.find(r => r.id === id);\r\n    this.rooms.splice(this.rooms.indexOf(room),1);\r\n    return of(null)\r\n  }\r\n\r\n  getBookings(date:string): Observable<Array<Booking>>{\r\n    return of(this.bookings.filter(b=>b.date === date));\r\n  }\r\n\r\n  getBooking(id: number): Observable<Booking>{\r\n    return of(this.bookings.find(book=>book.id===id));\r\n  }\r\n\r\n  saveBooking(booking: Booking): Observable<Booking>{\r\n    const existingBooking=this.bookings.find(b=>b.id===booking.id);\r\n    existingBooking.date=booking.date;\r\n    existingBooking.startTime=booking.startTime;\r\n    existingBooking.endTime=booking.endTime;\r\n    existingBooking.layout=booking.layout;\r\n    existingBooking.participants=booking.participants;\r\n    existingBooking.room=booking.room;\r\n    existingBooking.title=booking.title;\r\n    existingBooking.user=booking.user;\r\n    return of(existingBooking);\r\n  }\r\n\r\n  addBooking(newBooking: Booking): Observable<Booking>{\r\n    let id: number=0;\r\n    for (const booking of this.bookings) {\r\n      if (id<booking.id) {\r\n        id=booking.id;\r\n      }\r\n    }\r\n    newBooking.id=id+1;\r\n    this.bookings.push(newBooking);\r\n    return of(newBooking);\r\n  }\r\n\r\n  deleteBooking(id: number): Observable<any>{\r\n    const booking=this.bookings.find(b=>b.id===id);\r\n    this.bookings.splice(this.bookings.indexOf(booking),1);\r\n    return of(null);\r\n  }\r\n  validateUser(name: string, password: string): Observable<{result:string}>{\r\n    return of({result:\"ok\"})\r\n  }\r\n  getRole(): Observable<{role: string}>{\r\n    return of({role: 'ADMIN'});\r\n  }\r\n  logout(): Observable<string>{\r\n    return of('');\r\n  }\r\n\r\n  constructor() {\r\n    console.log(environment.restUrl);\r\n    \r\n    this.rooms=new Array<Room>();\r\n    const room1 = new Room();\r\n    room1.id=1;\r\n    room1.name='First Room';\r\n    room1.location='First Floor';\r\n    const capacity1 = new LayoutCapacity();\r\n    capacity1.layout=Layout.THEATER;\r\n    capacity1.capacity=50;\r\n    const capacity2 = new LayoutCapacity();\r\n    capacity2.layout=Layout.USHAPE;\r\n    capacity2.capacity=20;\r\n    room1.capacities.push(capacity1);\r\n    room1.capacities.push(capacity2);\r\n    const room2 = new Room();\r\n    room2.id=2;\r\n    room2.name='Second Room';\r\n    room2.location='Third Floor';\r\n    const capacity3 = new LayoutCapacity();\r\n    capacity3.layout=Layout.THEATER;\r\n    capacity3.capacity=60;\r\n    room2.capacities.push(capacity3);\r\n    this.rooms.push(room1);\r\n    this.rooms.push(room2);\r\n\r\n    this.users=new Array<User>();\r\n    const user1=new User();\r\n    user1.id=1;\r\n    user1.name='Mari';\r\n    const user2=new User();\r\n    user2.id=2;\r\n    user2.name= 'Raj';\r\n    this.users.push(user1,user2);\r\n\r\n    this.bookings=new Array<Booking>();\r\n    const booking1 = new Booking();\r\n    booking1.id=1;\r\n    booking1.room=room1;\r\n    booking1.user=user1;\r\n    booking1.layout=Layout.USHAPE;\r\n    booking1.title='Confrence Meeting';\r\n    booking1.date=formatDate(new Date(),'yyyy-MM-dd','en-IN');\r\n    booking1.startTime='11:30';\r\n    booking1.endTime='12:30';\r\n    booking1.participants=12;\r\n\r\n    const booking2 = new Booking();\r\n    booking2.id=2;\r\n    booking2.room=room2;\r\n    booking2.user=user2;\r\n    booking2.layout=Layout.THEATER;\r\n    booking2.title='Inauguration Meeting';\r\n    booking2.date=formatDate(new Date(),'yyyy-MM-dd','en-IN');\r\n    booking2.startTime='10:30';\r\n    booking2.endTime='11:30';\r\n    booking2.participants=10\r\n\r\n    this.bookings.push(booking1, booking2);\r\n  }\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Room } from './model/Room';\nimport { User } from './model/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormResetService {\n\n  resetRoomFormEvent= new EventEmitter<Room>();\n\n  resetUserFormEvent= new EventEmitter<User>();\n  constructor() { }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>Login</h1>\\n\\n<div class=\\\"bg-warning p-5\\\" *ngIf=\\\"message\\\">{{message}}</div>\\n\\n<form #userForm=\\\"ngForm\\\">\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"user name\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">Login</button>\\n\\n</form>\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  message='';\n  name: string;\n  password: string;\n  subscription: Subscription;\n\n  constructor(private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.subscription= this.authService.authenticationResultEvent.subscribe(\n      next=>{\n        if(next){\n          // TODO: add navigation\n                const url=this.route.snapshot.queryParams['requested'];\n                this.router.navigateByUrl(url);\n              } else{\n                this.message= 'Username and password are not recognised - try again. '\n              }\n      }\n    );\n    this.authService.checkIfAlreadyAuthenticated();\n  }\n\n  onSubmit(){\n    this.authService.authenticate(this.name,this.password)\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" (click)=\\\"navigateToCalendar()\\\">Room Booking</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"navigateToCalendar()\\\">Calendar</a>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Admin\\n        </a>\\n        <div class=\\\"dropdown-content\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"navigateToRoomsAdmin()\\\">Rooms</a>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"navigateToUsersAdmin()\\\" >Users</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item active\\\" *ngIf=\\\"userIsLogedIn\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, EventEmitter, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  userIsLogedIn=false;\n\n\n  constructor(private router: Router,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    if (this.authService.isAuthenticated) this.userIsLogedIn=true\n    this.authService.roleSetEvent.subscribe(\n      next=>{\n        if (next!==''){\n          this.userIsLogedIn=true;\n        } else{\n          this.userIsLogedIn=false\n        }\n      }\n    )\n  }\n\n  navigateToRoomsAdmin(){\n    this.router.navigate(['admin','rooms'])\n  }\n  navigateToUsersAdmin(){\n    this.router.navigate(['admin','users'])\n  }\n  navigateToCalendar(){\n    this.router.navigate([''])\n  }\n\n  logout(){\n    this.authService.logout();\n    this.navigateToCalendar();\n  }\n}\n","import { Layout, Room } from \"./Room\";\r\nimport { User } from \"./User\";\r\n\r\nexport class Booking {\r\n    id: number;\r\n    room: Room;\r\n    user: User;\r\n    layout: Layout;\r\n    title: string;\r\n    date: string;\r\n    startTime: string;\r\n    endTime: string;\r\n    participants: number;\r\n\r\n    getDateAsDate() {\r\n        return new Date(this.date);\r\n    }\r\n\r\n    static fromHttp(booking: Booking): Booking{\r\n        const newBooking = new Booking();\r\n        newBooking.id=booking.id;\r\n        newBooking.room=Room.fromHttp(booking.room);\r\n        newBooking.user=User.fromHttp(booking.user);\r\n        newBooking.layout=Layout[booking.layout];\r\n        newBooking.date=booking.date;\r\n        newBooking.title=booking.title;\r\n        newBooking.startTime=booking.startTime;\r\n        newBooking.endTime=booking.endTime;\r\n        newBooking.participants=booking.participants;\r\n        return newBooking;\r\n    }\r\n}","export class Room{\r\n    id: number;\r\n    name: string;\r\n    location: string;\r\n    capacities= new Array<LayoutCapacity>();\r\n\r\n    static fromHttp(room: Room){\r\n        const newRoom=new Room();\r\n        newRoom.id=room.id;\r\n        newRoom.name=room.name;\r\n        newRoom.location=room.location;\r\n        newRoom.capacities=new Array<LayoutCapacity>();\r\n        for (const lc of room.capacities) {\r\n            newRoom.capacities.push(LayoutCapacity.fromHttp(lc))\r\n        }\r\n        return newRoom;\r\n    }\r\n}\r\n\r\nexport class LayoutCapacity{\r\n    layout: Layout;\r\n    capacity: number;\r\n\r\n    static fromHttp(lc: LayoutCapacity): LayoutCapacity{\r\n        const newlc = new LayoutCapacity();\r\n        newlc.capacity=lc.capacity;\r\n        newlc.layout=Layout[lc.layout];\r\n        return newlc;\r\n    }\r\n}\r\n\r\nexport enum Layout{\r\n    THEATER='Theater',\r\n    USHAPE='U-Shape',\r\n    BOARD='Board Meating'\r\n}","export class User{\r\n    id: number;\r\n    name: string;\r\n\r\n    static fromHttp(user: User) : User{\r\n        const newUser = new User();\r\n        newUser.id=user.id;\r\n        newUser.name=user.name;\r\n        return newUser;\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  Page you are looking for is not exists\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DataService } from './data.service';\nimport { Room } from './model/Room';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrefetchRoomsService implements Resolve<Observable<Array<Room>>>{\n\n  constructor(private dataService: DataService) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Room[]> | Observable<Observable<Room[]>> | Promise<Observable<Room[]>> {\n    return this.dataService.getRooms();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DataService } from './data.service';\nimport { User } from './model/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrefetchUsersService implements Resolve<Observable<Array<User>>> {\n\n  constructor(private dataService: DataService) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<User[]> | Observable<Observable<User[]>> | Promise<Observable<User[]>> {\n    return this.dataService.getUsers();\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  restUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}